management.server.remote.url=service:jmx:jmxmp://localhost:5555

repository.url=http://localhost:41080/coremedia/ior

# root dir where the sitemap controller writes its files
blueprint.sitemap.target.root=${user.home}/cms/sitemap

# query to fire for content bean initialization
blueprint.contentbean.initialization.query=TYPE CMLinkable AND isInProduction LIMIT 100

#
# If set to true, html comments will be written to the rendered pages around included fragments.
# This is a development feature. With these comments you can easily see which JSP, bean and view
# was used to render a fragment.
#
view.debug.enabled=false

#
# If set to true, exceptions will be displayed in a template
#
view.errorhandler.enabled=true
view.errorhandler.output=false
view.errorhandler.output.defaultview=false

# By convention, templates are written for bean interfaces, but views may be named after any type.
# If set to true, viewlookup will only be done for views named after interfaces, not classes, with configurable
# excludes and includes.
filter.viewlookup.by.predicate=true

# Enables CSRF prevention, requiring any unsafe (e.g. POST) requests to include the user's CSRF token.
security.csrf-prevention.enabled=true

# true if links to resources such as JavaScript and CSS should be generated to point to files in the
# application container (e.g. in modules under META-INF/resources/themes/) instead of the content repository.
cae.use.local.resources=false

# setting to enable merging and minification of resources such as JavaScript and CSS.
# if set to true, these resources will be merged and minfied during delivery and only a single
# link will be rendered to each type of resource. otherwise, each corresponding script and stylesheet
# will be rendered as a seperate link.
cae.developer.mode=false

# True when this is a "standalone" CAE in a servlet container serving requests directly
# or false when behind some URL rewriting reverse proxy (e.g. Apache)
cae.is.standalone=true

# Blob transformer capacity in megabytes of raw blob data. Used to limit
# heap consumption during concurrent blob transformations.
# For images, with an average JPEG compression ratio of 1:20, 10 MB of raw blob data
# will eat up about 200 MB heap.
# Note that the actual heap usage might be much higher if the compression ratio is
# higher and/or a single image is really big.
# The blob transformer does not block the transformation of big blobs, it merely makes sure
# that they are transformed one at a time.
# In addition, some image operations require a second representation of the image, which might double
# heap usage in the worst case.
cae.blobtransformer.capacity=10

# Cache size of Java2D images loaded from content blobs, in bytes. Set to 100MB as default.
com.coremedia.transform.loadedImageCacheCapacity=104857600

# default size for cache keys with CacheKey#cacheClass returning the default "java.lang.Object"
cachekeysize.java.lang.object=10000

# the U-API heap cache size in RAM, -1 means default 20Mb
repository.heapCacheSize=-1

# the U-API blob cache size on disk, -1 means default 10Gb
repository.blobCacheSize=-1

# the U-API maximum size of a blob that can be cached, -1 means default Integer.MAX_VALUE
repository.maxCachedBlobSize=-1

#
# Data views cache capacities
#
assumesIdentity.cache.capacity=5000
page.cache.capacity=5000
pageGridImpl.cache.capacity=500
contentBeanBackedPageGridPlacement.cache.capacity=800
aspect.cache.capacity=1000

