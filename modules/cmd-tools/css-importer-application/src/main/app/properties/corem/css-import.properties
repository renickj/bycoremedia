### CSS importer configuration

##### customize

### The com.coremedia.publisher.importer.MultiResultGenerator interface
### implementation to use
import.multiResultGeneratorFactory.class=com.coremedia.blueprint.common.importfilter.CssImporterResultFactory
# Semicolon separated paths to source CSSs and related data (e.g. images).
import.multiResultGeneratorFactory.property.inbox=${css.importer.inbox}
# Add filetypes to import, if missing
import.multiResultGeneratorFactory.property.filePattern=(.*\\.css|.*\\.js|.*\\.swf|.*\\.jar|.*\\.png|.*\\.jpg|.*\\.gif|.*\\.ttf|.*\\.eot|.*\\.otf|.*\\.woff|.*\\.woff2|.*\\.svg.*|\\.jar)
import.multiResultGeneratorFactory.property.noTemplates=false

import.transformer.30.class=com.coremedia.blueprint.common.importfilter.ValidationTransformerFactory
import.transformer.30.name=Validate

import.transformer.40.class=com.coremedia.blueprint.common.importfilter.CssTransformerFactory
import.transformer.40.name=CSS to RichText
# The repository path where to put the stylesheet documents
import.transformer.40.property.targetpath=/Themes

### CoreMedia user and password
import.user=importer
import.password=importer

### * if true, the importer validates all xml text properties against the
### associated xml dtd. If a validation fails, no document is created on the
### server.
### * if false, the xml importer does not validate.
import.validate-textproperty = false
import.enforceCompleteVersion = false