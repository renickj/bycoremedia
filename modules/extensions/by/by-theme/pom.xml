<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.boots.cms.beautifulyou</groupId>
		<artifactId>by</artifactId>
		<version>1.0.18</version>
	</parent>

	<artifactId>by-theme</artifactId>

	<properties>
		<coremedia.project.extension.for>cae</coremedia.project.extension.for>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.coremedia.cms</groupId>
			<artifactId>cae-viewservices-api</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>cae-base-lib</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!--<dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>corporate-cae</artifactId>
          <version>${project.version}</version>
          <scope>runtime</scope>
        </dependency>-->
	</dependencies>

	<build>
		<plugins>
			<!--
                The dependency-plugin does not know about FreeMarker templates.
                So define the used dependencies explicitly.
              -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<usedDependencies>
						<usedDependency>org.springframework:spring-webmvc</usedDependency>
						<usedDependency>com.coremedia.cms:cae-viewservices-api</usedDependency>
					</usedDependencies>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- activate this plugin for local development to generate webresources for cae-preview-webapp -->
	<profiles>
		<profile>
			<id>development-themes</id>
			<activation>
				<property>
					<name>!skipThemes</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<filesets>
								<fileset>
									<directory>node</directory>
								</fileset>
								<fileset>
									<directory>node_modules</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>install node and npm</id>
								<phase>package</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v0.12.7</nodeVersion>
									<npmVersion>2.3.0</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
							</execution>
							<execution>
								<id>grunt build</id>
								<phase>package</phase>
								<goals>
									<goal>grunt</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- build theme and copy everything to the target folder -->
					<!-- Pack FTLs twice. Once into target/resources/themes/templates, once into target root -->
					<plugin>
						<artifactId>maven-jar-plugin</artifactId>
						<executions>
							<execution>
								<id>jar-templates-to-resources-target</id>
								<goals><goal>jar</goal></goals>
								<phase>package</phase>
								<configuration>
									<classesDirectory>src/main/resources</classesDirectory>
									<includes>
										<include>**/*</include>
									</includes>
									<outputDirectory>${basedir}/target/resources/themes/by/templates</outputDirectory>
									<finalName>by-templates</finalName>
								</configuration>
							</execution>
							<execution>
								<id>jar-templates-target-root</id>
								<goals><goal>jar</goal></goals>
								<phase>package</phase>
								<configuration>
									<classesDirectory>src/main/resources</classesDirectory>
									<includes>
										<include>**/*</include>
									</includes>
									<outputDirectory>${basedir}/target/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Copy resources except freemarker -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}/target/resources/themes/by/</outputDirectory>
									<resources>
										<resource>
											<directory>src/</directory>
											<filtering>false</filtering>
											<excludes>
												<!-- Exclude freemarker templates, they are packed as jar separately -->
												<exclude>main/**</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<!-- Provide the resources artifact for the coremedia-webresource-content-maven-plugin. -->
								<id>theme</id>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<descriptors>
										<descriptor>assembly/resources-assembly-descriptor.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
