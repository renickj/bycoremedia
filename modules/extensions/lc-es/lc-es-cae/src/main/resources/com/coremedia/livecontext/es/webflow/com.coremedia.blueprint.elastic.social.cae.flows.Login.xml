<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
  <var name="loginForm" class="com.coremedia.blueprint.elastic.social.cae.flows.LoginForm"/>

  <input name="next"/>

  <on-start>
    <!--
      Login/Registration is done using https. The commerce system may need secure cookies, which we
      request using a ping with https to the storefront.
    -->
    <evaluate expression="lcWebflowUrlHelper.pingCommerce(flowRequestContext)"/>
    <!-- When CSRF prevention is enabled, this will force the creation of a CSRF user token,
         in order to prevent Login-CSRF. Login POST requests must include this token in their form submit to succeed. -->
    <evaluate expression="csrfTokenManagement.forceToken(flowRequestContext.externalContext.nativeRequest)"/>
    <set name="flowScope.nextUrl" value="webflowUrlHelper.getNextUrl(next, flowRequestContext)"/>
    <evaluate expression="loginHelper.postProcessProviderLogin(flowRequestContext)"/>
    <evaluate expression="lcRegistrationHelper.registerAndLoginSilent(flowRequestContext)"/>
  </on-start>

  <decision-state id="isLoggedIn">
    <if test="liveContextUserService.isLoggedIn(flowRequestContext.externalContext.nativeRequest)"
        then="loggedIn"
        else="login"/>
  </decision-state>

  <view-state id="login" model="loginForm">
    <transition on="submit" to="success">
      <evaluate expression="liveContextUserService.loginUser(loginForm.name, loginForm.password, flowRequestContext, flowRequestContext.externalContext.nativeRequest, flowRequestContext.externalContext.nativeResponse)"/>
    </transition>
  </view-state>

  <view-state id="loggedIn" view="success" >
    <transition on="submit" to="logout"/>
  </view-state>

  <end-state id="logout" view="externalRedirect:contextRelative:/j_spring_security_logout?spring-security-redirect=#{nextUrl}" />
  <end-state id="success" view="externalRedirect:#{nextUrl}" />
</flow>