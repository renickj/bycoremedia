<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.boots.cms</groupId>
    <artifactId>studio</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>studio-webapp</artifactId>
  <packaging>war</packaging>

  <description>The CoreMedia CMS Studio</description>

  <dependencies>
    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>base-component</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>studio-client</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>studio-lib-extension-dependencies</artifactId>
      <version>${project.version}</version>
      <type>pom</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.blueprint.base</groupId>
      <artifactId>bpbase-uapi-client</artifactId>
      <scope>runtime</scope>
    </dependency>
    
    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-schema-bundle</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.ui</groupId>
      <artifactId>editing-rest-component</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.ui</groupId>
      <artifactId>editing-rest-security-component</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.ui.collaboration</groupId>
      <artifactId>control-room-rest-component</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.ui</groupId>
      <artifactId>collaboration-project-rest-component</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cae</groupId>
      <artifactId>cae-toolbox-studio-component</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet.jsp.jstl</groupId>
      <artifactId>javax.servlet.jsp.jstl-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.management</groupId>
      <artifactId>jmxremote_optional</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.cms</groupId>
      <artifactId>cap-client</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>taxonomies-rest-extension</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>configurations-rest-extension</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>validators-rest-extension</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>upload-rest-extension</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>metadata-rest-extension</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>blob-metadata-rest-extension</artifactId>
      <version>${project.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.coremedia.blueprint.base</groupId>
      <artifactId>bpbase-pagegrid-rest-extension</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.drewnoakes</groupId>
      <artifactId>metadata-extractor</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>studio</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <webResources>
            <resource>
              <directory>target/jangaroo-output</directory>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <configuration>
          <port>${STUDIO_PORT_PREFIX}${STUDIO_HTTP_PORT_SUFFIX}</port>
          <ajpPort>${STUDIO_PORT_PREFIX}${STUDIO_AJP_PORT_SUFFIX}</ajpPort>
          <warSourceDirectory>${project.basedir}/src/main/webapp</warSourceDirectory>
          <contextFile>${project.basedir}/tomcat-context.xml</contextFile>
          <path>/</path>
          <systemProperties>
            <catalina.base>${project.build.directory}</catalina.base>
            <resourcePath.base>${project.basedir}</resourcePath.base>
            <studio.security.csp.frameSrc>${studio.security.csp.frameSrc}</studio.security.csp.frameSrc>
            <studio.previewUrlWhitelist>${studio.previewUrlWhitelist}</studio.previewUrlWhitelist>
            <solr.search.url>http://${solr.host}:${SOLR_MASTER_PORT_PREFIX}${HTTP_PORT_SUFFIX}/solr/preview</solr.search.url>
            <mongoDb.clientURI>mongodb://${mongo.db.host}:27017</mongoDb.clientURI>
            <elastic.solr.url>http://${solr.host}:${SOLR_MASTER_PORT_PREFIX}${HTTP_PORT_SUFFIX}/solr</elastic.solr.url>
            <!--
               Sets a JMX remote url so that the webapp can be accessed via JMX when running with tomcat plugin.
               When running this application in a standalone tomcat, then the tomcat's built-in remote connector server
               can be used instead.
            -->
            <management.server.remote.url>service:jmx:rmi://localhost:${STUDIO_PORT_PREFIX}${JMX_SERVER_PORT_SUFFIX}/jndi/rmi://localhost:${STUDIO_PORT_PREFIX}${JMX_REGISTRY_PORT_SUFFIX}/studio</management.server.remote.url>
            <coremedia.logging.directory>${project.build.directory}/logs</coremedia.logging.directory>
            <tenant.default>${tenant.default}</tenant.default>
            <elastic.social.mail.smtp.server>${elastic.social.mail.smtp.server}</elastic.social.mail.smtp.server>
            <es.cae.http.port>${es.cae.http.port}</es.cae.http.port>
            <es.cae.http.host>${es.cae.http.host}</es.cae.http.host>
            <es.cae.protocol>${es.cae.protocol}</es.cae.protocol>
            <studio.previewUrlPrefix>${studio.previewUrlPrefix}</studio.previewUrlPrefix>
            <installation.host>${installation.host}</installation.host>
            <!--
                CoreMedia LiveContext Configuration
            -->
            <livecontext.ibm.wcs.host>${livecontext.ibm.wcs.host}</livecontext.ibm.wcs.host>
            <livecontext.apache.wcs.host>${livecontext.apache.wcs.host}</livecontext.apache.wcs.host>
            <blueprint.host.helios>${blueprint.host.helios}</blueprint.host.helios>
            <livecontext.apache.preview.production.wcs.host>${livecontext.apache.preview.production.wcs.host}</livecontext.apache.preview.production.wcs.host>
            <livecontext.ibm.wcs.cache.invalidation.enabled>${livecontext.ibm.wcs.cache.invalidation.enabled}</livecontext.ibm.wcs.cache.invalidation.enabled>
            <livecontext.ibm.wcs.version>${livecontext.ibm.wcs.version}</livecontext.ibm.wcs.version>
            <livecontext.ibm.wcs.store.id.aurora>${livecontext.ibm.wcs.store.id.aurora}</livecontext.ibm.wcs.store.id.aurora>
            <livecontext.ibm.wcs.store.id.perfectchef>${livecontext.ibm.wcs.store.id.perfectchef}</livecontext.ibm.wcs.store.id.perfectchef>
            <livecontext.ibm.wcs.catalog.id.aurora>${livecontext.ibm.wcs.catalog.id.aurora}</livecontext.ibm.wcs.catalog.id.aurora>
            <livecontext.ibm.wcs.catalog.id.perfectchef>${livecontext.ibm.wcs.catalog.id.perfectchef}</livecontext.ibm.wcs.catalog.id.perfectchef>
            <!--
                CoreMedia Corporate Configuration
            -->
            <blueprint.host.corporate>${blueprint.host.corporate}</blueprint.host.corporate>

            <!-- the following properties are only relevant in 'db2' profile -->
            <caplist>${caplist}</caplist>
            <controlroom.jdbc.driver>${controlroom.jdbc.driver}</controlroom.jdbc.driver>
            <controlroom.jdbc.url>${controlroom.jdbc.url}</controlroom.jdbc.url>
            <controlroom.jdbc.user>${controlroom.jdbc.user}</controlroom.jdbc.user>
            <controlroom.jdbc.password>${controlroom.jdbc.password}</controlroom.jdbc.password>
            <repository.url>${repository.url}</repository.url>
            <repository.workflow>${repository.workflow}</repository.workflow>
            <spring.profiles.active>${spring.profiles.active}</spring.profiles.active>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.jangaroo</groupId>
        <artifactId>jangaroo-maven-plugin</artifactId>
        <extensions>true</extensions>
        <version>${jangaroo.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>war-package</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>websphere</id>
      <!-- workaround Websphere's unperformant resource loading -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <executions>
              <execution>
                <id>websphere-war-exploded</id>
                <goals>
                  <goal>war</goal>
                </goals>
                <configuration>
                  <webappDirectory>${project.build.directory}/${project.build.finalName}-websphere</webappDirectory>
                  <classifier>websphere</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.jangaroo</groupId>
            <artifactId>webjars-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <webappDirectory>${project.build.directory}/${project.build.finalName}-websphere</webappDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>turbojpeg</id>
      <dependencies>
        <dependency>
          <groupId>com.coremedia.com.sun.media.imageio</groupId>
          <artifactId>jai-imageio</artifactId>
          <version>1.1</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>com.coremedia.org.libjpegturbo</groupId>
          <artifactId>turbojpeg-wrapper</artifactId>
          <version>1.2.1.1</version>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>com.coremedia.it.geosolutions.imageio-ext</groupId>
          <artifactId>imageio-ext-turbojpeg</artifactId>
          <version>1.1.10</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

</project>
