<?xml version="1.0" encoding="UTF-8" standalone="no"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--
      You will need to change the groupId in all modules
      A global search&replace will do the job !
  -->
  <groupId>com.boots.cms.beautifulyou</groupId>
  <artifactId>blueprint</artifactId>
  <version>1.0.16</version>
  <packaging>pom</packaging>
  <name>Tenant: BetaLab</name>

  <organization>
    <name>Blueprint</name>
  </organization>

  <properties>
    <!--
      Since separation of the blueprint workspace into core and tenant app, this is the version to use as core.
    -->
    <boots.cms.core.version>1.0.16</boots.cms.core.version>
    <!--
      Port Prefix for xx-preview-tomcat
      20: BeautifulYou
      21: E-Store (boots.com)
      22: LizEarle
      23: Boots Norway
    -->
    <tenant.preview.port.prefix>20</tenant.preview.port.prefix>
    <tenant.preview.jvm.worker>beautWorker</tenant.preview.jvm.worker>

    <failOnWarning>true</failOnWarning>
    <coremedia.enforcer.fail>true</coremedia.enforcer.fail>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <compile.source.jdk>1.7</compile.source.jdk>
    <compile.target.jdk>1.7</compile.target.jdk>

    <google.api.services.analytics.version>v3-rev99-1.19.0</google.api.services.analytics.version>
    <google.api.client.version>1.19.0</google.api.client.version>

    <!--
     | set this property in any reactor module, e.g. a module that has a modules element, so that it points to
     | the correct path relative to the submodules.
    -->
    <workspace.configuration.dir>../workspace-configuration</workspace.configuration.dir>

    <customer>Blueprint</customer>

    <blueprint-base.version>7.5.34-10</blueprint-base.version>
    <cms.version>7.5.34-10</cms.version>
    <personalization.version>7.5.34-10</personalization.version>
    <elastic.version>7.5.34-10</elastic.version><!-- Note: Keep in sync with (intentionally) duplicated property in internal/coremedia-bom/pom.xml! -->
    <studio.version>7.5.34-10</studio.version>
    <caetoolbox.version>7.5.34-10</caetoolbox.version>
    <livecontext.version>7.5.34-10</livecontext.version>
    <jangaroo.version>2.0.15</jangaroo.version>
    <jangaroo.libs.version>2.0.14</jangaroo.libs.version>


    <!--
      Location of the Site Manager user manual.

      If your editors are supposed to work in internet-restricted environments,
      you must host the manuals inhouse (e.g. add them to the webstart webapp) and
      adjust this url accordingly.
    -->
    <cms.editor.manuals.base.url>https://documentation.coremedia.com/editor-user/${cms.version}</cms.editor.manuals.base.url>

    <atlassian.crowd.version>2.5.1</atlassian.crowd.version>
    <tomcat.version>7.0.59</tomcat.version>
    <application-plugin.version>2.7.10</application-plugin.version>

    <!--
    | the following *.host properties are defined here for convenience, so that they can be overridden
    | via a profile in the settings.xml.
    | If you want to develop applications against services started either in a shared deployment on a remote machine
    | or against services running in your vagrant boxes you need to add a profile that overrides these properties.
    | For the vagrant boxes you simply have to activate the vagrant profile.
    | if all services are running on one box you can use installation
    -->
    <installation.host>localhost</installation.host>

    <cms.host>${installation.host}</cms.host>
    <mls.host>${installation.host}</mls.host>
    <rls.host>${installation.host}</rls.host>
    <solr.host>${installation.host}</solr.host>
    <caefeeder-preview.host>${installation.host}</caefeeder-preview.host>
    <caefeeder-live.host>${installation.host}</caefeeder-live.host>
    <mongo.db.host>${installation.host}</mongo.db.host>
    <mongo.db.port>27017</mongo.db.port>
    <database.host>${installation.host}</database.host>
    <studio.host>${installation.host}</studio.host>

    <!--
    | Semicolon separated list of folders for the inbox of the web resources importer. Import following themes by default:
    | basic, corporate, perfectchef, aurora and the extensions elastic social (es and lc-es)
    -->
    <blueprint.rootdir>${session.executionRootDirectory}</blueprint.rootdir>
    <css.importer.inbox.cae>${blueprint.rootdir}/modules/cae/cae-themes/basic-theme/target/resources/themes</css.importer.inbox.cae>
    <css.importer.inbox.corporate>${blueprint.rootdir}/modules/extensions/corporate/corporate-theme/target/resources/themes</css.importer.inbox.corporate>
    <css.importer.inbox.estore>${blueprint.rootdir}/modules/extensions/estore/estore-theme/target/resources/themes</css.importer.inbox.estore>
    <css.importer.inbox.es>${blueprint.rootdir}/modules/extensions/es/es-theme/target/resources/themes</css.importer.inbox.es>
    <css.importer.inbox.aurora>${blueprint.rootdir}/modules/extensions/lc/lc-themes/aurora-theme/target/resources/themes</css.importer.inbox.aurora>
    <css.importer.inbox.pc>${blueprint.rootdir}/modules/extensions/lc/lc-themes/perfectchef-theme/target/resources/themes</css.importer.inbox.pc>
    <!-- Theme folder location for the by theme -->
    <css.importer.inbox.by>${blueprint.rootdir}/modules/extensions/by/by-theme/target/resources/themes</css.importer.inbox.by>
    <!-- Only import estore and by theme for quicker turn around <css.importer.inbox>${css.importer.inbox.cae};${css.importer.inbox.corporate};${css.importer.inbox.es};${css.importer.inbox.aurora};${css.importer.inbox.pc};${css.importer.inbox.estore}</css.importer.inbox>-->
    <css.importer.inbox>${css.importer.inbox.estore};${css.importer.inbox.by}</css.importer.inbox>

    <!--
    | true if links to resources such as JavaScript and CSS should be generated to point to files in the
    | application container (e.g. in modules under META-INF/resources/) instead of the content repository.
    | this is useful while developing JSPs, CSS and JavaScript before importing the files into the repository.
    -->
    <cae.use.local.resources>false</cae.use.local.resources>
    <cae.developer.mode>false</cae.developer.mode>
    <view.debug.enabled>true</view.debug.enabled>

    <!--
    | "build" is the default grunt task to generate webresources in themes without templates jars.
    | change it to "buildWithTemplates" to include templates into content.
    -->
    <cae.themes.grunt.task>build</cae.themes.grunt.task>

    <!--
      Blueprint port configuration

      All Blueprint ports are composed from a component prefix (e.g. CMS, STUDIO)
      and a protocol suffix (e.g. HTTP, AJP).
      There are default prefixes and suffixes for all components and protocols,
      which in most cases constitute unique ports.

      However there are some subtle issues concerning CAE and Studio.
      During local development you run the preview CAE and Studio in separate
      Tomcat instances by the tomcat7 Maven plugin.  In a production setup
      the two webapps are deployed in a common Tomcat instance.
      In both cases you want to proxy the CAE by an Apache.

      We use distinct names for the CAE and Studio port prefixes and suffixes,
      even though some of them have the same values or even the default values.
      This makes it easier to change them without unexpected side effects.
      The values are appropriate for the production setup.  For local development
      some values are adjusted in the development-ports profile.
     -->

    <!-- default port prefixes -->
    <CONTENT_FEEDER_PORT_PREFIX>39</CONTENT_FEEDER_PORT_PREFIX>
    <STUDIO_PORT_PREFIX>40</STUDIO_PORT_PREFIX>
    <PREVIEW_PORT_PREFIX>40</PREVIEW_PORT_PREFIX>
    <CMS_PORT_PREFIX>41</CMS_PORT_PREFIX>
    <MLS_PORT_PREFIX>42</MLS_PORT_PREFIX>
    <WFS_PORT_PREFIX>43</WFS_PORT_PREFIX>
    <SOLR_MASTER_PORT_PREFIX>44</SOLR_MASTER_PORT_PREFIX>
    <SOLR_SLAVE_PORT_PREFIX>45</SOLR_SLAVE_PORT_PREFIX>
    <CAEFEEDER_PREVIEW_PORT_PREFIX>46</CAEFEEDER_PREVIEW_PORT_PREFIX>
    <CAEFEEDER_LIVE_PORT_PREFIX>47</CAEFEEDER_LIVE_PORT_PREFIX>
    <RLS_PORT_PREFIX>48</RLS_PORT_PREFIX>
    <DELIVERY_PORT_PREFIX>49</DELIVERY_PORT_PREFIX>

    <TENANT_PREVIEW_PORT_PREFIX>${tenant.preview.port.prefix}</TENANT_PREVIEW_PORT_PREFIX>

    <!--default port suffixes-->
    <HTTP_PORT_SUFFIX>080</HTTP_PORT_SUFFIX>
    <HTTPS_PORT_SUFFIX>443</HTTPS_PORT_SUFFIX>
    <SHUTDOWN_PORT_SUFFIX>005</SHUTDOWN_PORT_SUFFIX>
    <AJP_PORT_SUFFIX>009</AJP_PORT_SUFFIX>
    <JMX_REGISTRY_PORT_SUFFIX>099</JMX_REGISTRY_PORT_SUFFIX>
    <JMX_SERVER_PORT_SUFFIX>098</JMX_SERVER_PORT_SUFFIX>
    <DEBUG_PORT_SUFFIX>777</DEBUG_PORT_SUFFIX>
    <CORBA_PORT_SUFFIX>683</CORBA_PORT_SUFFIX>
    <CORBA_SSL_PORT_SUFFIX>684</CORBA_SSL_PORT_SUFFIX>

    <!-- point out the role of some suffixes -->
    <PREVIEW_AJP_PORT_SUFFIX>${AJP_PORT_SUFFIX}</PREVIEW_AJP_PORT_SUFFIX>
    <STUDIO_AJP_PORT_SUFFIX>${AJP_PORT_SUFFIX}</STUDIO_AJP_PORT_SUFFIX>
    <DELIVERY_AJP_PORT_SUFFIX>${AJP_PORT_SUFFIX}</DELIVERY_AJP_PORT_SUFFIX>
    <PREVIEW_HTTP_PORT_SUFFIX>${HTTP_PORT_SUFFIX}</PREVIEW_HTTP_PORT_SUFFIX>
    <STUDIO_HTTP_PORT_SUFFIX>${HTTP_PORT_SUFFIX}</STUDIO_HTTP_PORT_SUFFIX>
    <DELIVERY_HTTP_PORT_SUFFIX>${HTTP_PORT_SUFFIX}</DELIVERY_HTTP_PORT_SUFFIX>

    <tenant.default>helios</tenant.default>
    <elastic.social.mail.smtp.server>${installation.host}</elastic.social.mail.smtp.server>
    <es.cae.http.port>${DELIVERY_PORT_PREFIX}${DELIVERY_HTTP_PORT_SUFFIX}</es.cae.http.port>
    <es.cae.http.host>${installation.host}</es.cae.http.host>
    <es.cae.protocol>http</es.cae.protocol>
    <signCookie.publicKey>MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAITPdcUYMRXQgFy5dzachyoaEikD1T6sKiABaOKa583jKjPF3GvCKeRB/TQ+mCTl7fYDoYpCuqQIIe2sdU+AX+8CAwEAAQ==</signCookie.publicKey>
    <signCookie.privateKey>MIIBVQIBADANBgkqhkiG9w0BAQEFAASCAT8wggE7AgEAAkEAhM91xRgxFdCAXLl3NpyHKhoSKQPVPqwqIAFo4prnzeMqM8Xca8Ip5EH9ND6YJOXt9gOhikK6pAgh7ax1T4Bf7wIDAQABAkA1m+B3/HnjylPmGd8rJifRMNDfyXJMaAZhAPCrd8fV7SJ6a1hpZVcx7DNl6egSmeMGH1Kg3UFgzznRG1CZZmdRAiEA4YZyXuDPDdZn+mKgrZu4sJ1XwcEWzyEfi9qYRr151A0CIQCWwb8mjqEebCbfq5Kr4YKnbW9sWst5kljzl26qlg+Y6wIhAJHuNH2OTIywqzGKtlwAQp8OASYfsomu7kHJ3fUQUA/VAiEAi+1G26XU/CTMLBzW5TxKBdb4ba0UYUGp2Ga87A6eaYMCIDtlY/pvURhB7a5tr6vo1bU7YrfdxtISAhgcc6UFxHhB</signCookie.privateKey>

    <!-- configure the control room persistence extensions here -->
    <controlroom.persistence.extension>es</controlroom.persistence.extension>
    <notification.persistence.extension>elastic</notification.persistence.extension>
    <caplist>com.coremedia.cotopaxi.list.elastic.mongodb.MongoCapListConnectorFactory</caplist>
    <!-- db2 control room properties -->
    <controlroom.jdbc.driver/>
    <controlroom.jdbc.url/>
    <controlroom.jdbc.user/>
    <controlroom.jdbc.password/>

    <repository.url>http://${cms.host}:${CMS_PORT_PREFIX}${HTTP_PORT_SUFFIX}/coremedia/ior</repository.url>
    <repository.workflow/>

    <studio.previewUrlPrefix>http://${studio.host}:${PREVIEW_PORT_PREFIX}${PREVIEW_HTTP_PORT_SUFFIX}/blueprint/servlet</studio.previewUrlPrefix>

  </properties>

  <profiles>
    <profile>
      <id>env-by-dev-softlayer</id>
      <properties>
        <installation.host>159.8.163.205</installation.host>
      </properties>
    </profile>
    <profile>
      <id>withTemplates</id>
      <properties>
        <cae.themes.grunt.task>buildWithTemplates</cae.themes.grunt.task>
      </properties>
    </profile>
    <profile>
      <id>preview-cae-with-es-demodata-generator</id>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>es-demodata-bom</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      <build>
        <plugins>
          <plugin>
            <groupId>com.coremedia.maven</groupId>
            <artifactId>coremedia-blueprint-maven-plugin</artifactId>
            <inherited>false</inherited>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>update-extensions</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>development-ports</id>
      <!--
       |  Use this profile to run Studio and the CAEs locally
       |  with the tomcat7 Maven plugin.
       -->
      <properties>
        <!-- Make the preview ports distinct from the Studio ports -->
        <PREVIEW_AJP_PORT_SUFFIX>010</PREVIEW_AJP_PORT_SUFFIX>
        <PREVIEW_HTTP_PORT_SUFFIX>081</PREVIEW_HTTP_PORT_SUFFIX>
        <studio.host>localhost</studio.host>
      </properties>
    </profile>
    <profile>
      <id>vagrant</id>
      <!--
       |  Use this profile to develop against the vagrant setup
       -->
      <properties>
        <vagrant.box.ip>192.168.252.100</vagrant.box.ip>
        <cms.host>${vagrant.box.ip}</cms.host>
        <mls.host>${vagrant.box.ip}</mls.host>
        <solr.host>${vagrant.box.ip}</solr.host>
        <caefeeder-preview.host>${vagrant.box.ip}</caefeeder-preview.host>
        <caefeeder-live.host>${vagrant.box.ip}</caefeeder-live.host>
        <mongo.db.host>${vagrant.box.ip}</mongo.db.host>
        <database.host>${vagrant.box.ip}</database.host>
        <studio.host>${vagrant.box.ip}</studio.host>
        <rls.host>${vagrant.box.ip}</rls.host>
      </properties>
    </profile>
    <profile>
      <id>joo-unit-tests</id>
      <activation>
        <file>
          <exists>/usr/local/bin/phantomjs</exists>
        </file>
        <property>
          <name>phantomjs.bin</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>net.jangaroo</groupId>
            <artifactId>jangaroo-maven-plugin</artifactId>
            <configuration>
              <skip>false</skip>
              <jooUnitTestExecutionTimeout>30000</jooUnitTestExecutionTimeout>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>db2</id>
      <!--
      this profile replaces the controlroom and the notifications
      persistence layer - make sure to disable the other *-es-* and
      *-elastic-* extensions manually
      -->
      <properties>
        <controlroom.persistence.extension>db2</controlroom.persistence.extension>
        <notification.persistence.extension>memory</notification.persistence.extension>
      </properties>
    </profile>
  </profiles>

  <modules>
    <module>modules</module>
    <module>packages</module>
    <!-- its important that test-data is build before boxes because the test-data.zip must be build before
     boxes merge all test-data.zip. In parallel build this is no problem, but when building sequential the module order
     affects the build order because test-data is independent to other modules and no module depends on test-data -->
    <!--<module>test-data</module>-->
    <module>boxes</module>
  </modules>


  <prerequisites>
    <maven>3.1</maven>
  </prerequisites>

  <scm>
    <connection>scm:git:git@github.com:CoreMedia/cms.git</connection>
    <developerConnection>scm:git:git@github.com:CoreMedia/cms.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>softlayer.nexus.snapshots</id>
      <url>http://devops.cms.boots.com:8081/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>softlayer.nexus.releases</id>
      <url>http://devops.cms.boots.com:8081/nexus/content/repositories/releases/</url>
    </repository>
    <site>
      <id>localsite</id>
      <url>file://${project.basedir}/target/site-deploy</url>
    </site>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>

      <!-- List your plugins here -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>by-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>corporate-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>lc-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>bpbase-notification-${notification.persistence.extension}-bom</artifactId>
        <version>${blueprint-base.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>bpbase-todo-bom</artifactId>
        <version>${blueprint-base.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>lc-asset-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>es-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>lc-es-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>shoutem-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>es-alx-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>alx-google-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>alx-webtrends-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>osm-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>external-preview-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>optimizely-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>catalog-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- end of extension imports -->

      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>core-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.blueprint.base</groupId>
        <artifactId>blueprint-base-bom</artifactId>
        <version>${blueprint-base.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.cms</groupId>
        <artifactId>cms-thirdparty-bom</artifactId>
        <version>${cms.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.coremedia.ui</groupId>
        <artifactId>studio-bom</artifactId>
        <version>${studio.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>com.coremedia.cae</groupId>
        <artifactId>cae-developer-tools-bom</artifactId>
        <version>${caetoolbox.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- management of elastic social (3rd party) libs -->
      <dependency>
        <groupId>com.coremedia.elastic.core</groupId>
        <artifactId>core-bom</artifactId>
        <version>${elastic.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.coremedia.elastic.social</groupId>
        <artifactId>social-bom</artifactId>
        <version>${elastic.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.coremedia.personalization</groupId>
        <artifactId>personalization-bom</artifactId>
        <version>${personalization.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- management of p13n artifacts -->
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>p13n-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>alx-p13n-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!--<dependency>-->
        <!--<groupId>${project.groupId}</groupId>-->
        <!--<artifactId>es-p13n-bom</artifactId>-->
        <!--<version>${project.version}</version>-->
        <!--<type>pom</type>-->
        <!--<scope>import</scope>-->
      <!--</dependency>-->

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>lc-p13n-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>nuggad-bom</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- End of management of p13n artifacts -->

      <!-- LC API version management -->
      <dependency>
        <groupId>com.coremedia.livecontext</groupId>
        <artifactId>livecontext-bom</artifactId>
        <version>${livecontext.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>


      <dependency>
        <groupId>com.kaltura</groupId>
        <artifactId>client</artifactId>
        <version>3.1.5</version>
      </dependency>

      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>3.1</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-coyote</artifactId>
        <version>${tomcat.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-catalina</artifactId>
        <version>${tomcat.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.janino</groupId>
        <artifactId>janino</artifactId>
        <version>2.6.1</version>
      </dependency>

      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-client-rest</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-api</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>embedded-crowd-api</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>
      <dependency>
        <groupId>com.atlassian.crowd</groupId>
        <artifactId>crowd-integration-client-common</artifactId>
        <version>${atlassian.crowd.version}</version>
      </dependency>

      <dependency>
        <groupId>org.skyscreamer</groupId>
        <artifactId>jsonassert</artifactId>
        <version>1.2.1</version>
      </dependency>

      <dependency>
        <groupId>uk.com.robust-it</groupId>
        <artifactId>cloning</artifactId>
        <version>1.9.1</version>
      </dependency>

      <dependency>
        <groupId>co.freeside</groupId>
        <artifactId>betamax</artifactId>
        <version>1.1.2</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>2.2.1</version>
        <classifier>indy</classifier>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.coremedia.maven</groupId>
          <artifactId>coremedia-blueprint-maven-plugin</artifactId>
          <version>1.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <!-- due to https://issues.apache.org/jira/browse/MASSEMBLY-774 2.5.4 and 2.5.5 are not working adequately with maven 3.3.3 -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.6.1</version>
          <configuration>
            <filesets>
              <fileset>
                <directory>overlays</directory>
                <includes>
                  <include>**/*.*</include>
                </includes>
                <followSymlinks>false</followSymlinks>
              </fileset>
              <fileset>
                <directory>node_modules</directory>
              </fileset>
            </filesets>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>${compile.source.jdk}</source>
            <target>${compile.target.jdk}</target>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>0.0.26</version>
          <configuration>
            <nodeVersion>v4.1.1</nodeVersion>
            <npmVersion>3.3.4</npmVersion>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.coremedia.maven</groupId>
          <artifactId>coremedia-webresource-content-maven-plugin</artifactId>
          <version>0.17</version>
          <!-- Provide doctypes to create web resources as content-->
          <dependencies>
            <dependency>
              <groupId>com.boots.cms</groupId>
              <artifactId>contentserver-blueprint-component</artifactId>
              <version>${boots.cms.core.version}</version>
            </dependency>
            <dependency>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>cap-importer</artifactId>
              <version>${cms.version}</version>
            </dependency>
            <dependency>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>cap-unified-api</artifactId>
              <version>${cms.version}</version>
            </dependency>
            <dependency>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>serverimportexport</artifactId>
              <version>${cms.version}</version>
            </dependency>
            <dependency>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>cap-client-embedded</artifactId>
              <version>${cms.version}</version>
            </dependency>
            <dependency>
              <groupId>com.coremedia.cms</groupId>
              <artifactId>coremedia-xml</artifactId>
              <version>${cms.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <archive>
              <addMavenDescriptor>true</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>${customer}</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Build>revision: ${buildNumber} - ${maven.build.timestamp}</Implementation-Build>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <Implementation-Vendor>${customer}</Implementation-Vendor>
                <Implementation-Version>${project.version}</Implementation-Version>
                <X-Compile-Source-JDK>${compile.source.jdk}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${compile.target.jdk}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jarsigner-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <pushChanges>false</pushChanges>
            <localCheckout>true</localCheckout>
            <preparationGoals>clean verify</preparationGoals>
            <releaseProfiles>postconfigure,repository-upload,rpm-release-repo</releaseProfiles>
            <arguments>-Ppostconfigure</arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <includeEmptyDirs>true</includeEmptyDirs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <skip>true</skip>
            <skipDeploy>true</skipDeploy>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <systemPropertyVariables>
              <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <archive>
              <addMavenDescriptor>false</addMavenDescriptor>
              <forced>false</forced>
              <manifestEntries>
                <Built-By>${customer}</Built-By>
                <Build-Jdk>${java.version}</Build-Jdk>
                <Implementation-Build>revision: ${buildNumber} - ${maven.build.timestamp}</Implementation-Build>
                <Implementation-Title>${project.artifactId}</Implementation-Title>
                <Implementation-Vendor>${customer}</Implementation-Vendor>
                <Implementation-Version>${project.version}</Implementation-Version>
                <X-Compile-Source-JDK>${compile.source.jdk}</X-Compile-Source-JDK>
                <X-Compile-Target-JDK>${compile.target.jdk}</X-Compile-Target-JDK>
              </manifestEntries>
            </archive>
            <failOnMissingWebXml>false</failOnMissingWebXml>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0-alpha-2</version>
        </plugin>

        <plugin>
          <groupId>com.coremedia.maven</groupId>
          <artifactId>coremedia-application-maven-plugin</artifactId>
          <version>${application-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <uriEncoding>utf-8</uriEncoding>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-core</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-util</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-coyote</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jdbc</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-dbcp</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-servlet-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jsp-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jasper</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-jasper-el</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-el-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-catalina</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-tribes</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-catalina-ha</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-annotations-api</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat</groupId>
              <artifactId>tomcat-juli</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-logging-juli</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.tomcat.embed</groupId>
              <artifactId>tomcat-embed-logging-log4j</artifactId>
              <version>${tomcat.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-maven-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.9.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.3</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-maven-plugin</artifactId>
          <version>1.8.1</version>
        </plugin>
        <plugin>
          <groupId>com.lazerycode.jmeter</groupId>
          <artifactId>jmeter-analysis-maven-plugin</artifactId>
          <version>1.0.6</version>
        </plugin>


        <!-- see http://code.google.com/p/sortpom/ -->
        <!-- To start: mvn com.google.code.sortpom:maven-sortpom-plugin:sort -->
        <!-- or with configured pluginGroups: mvn sortpom:sort -->
        <plugin>
          <groupId>com.google.code.sortpom</groupId>
          <artifactId>maven-sortpom-plugin</artifactId>
          <version>2.2.1</version>
          <configuration>
            <!-- POM Code Convention - http://maven.apache.org/developers/conventions/code.html#POM_Code_Convention -->
            <sortOrderFile>recommended_2008_06.xml</sortOrderFile>
            <createBackupFile>false</createBackupFile>
            <expandEmptyElements>false</expandEmptyElements>
            <keepBlankLines>true</keepBlankLines>
            <verifyFail>Warn</verifyFail>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>1.5.2</version>
        </plugin>

        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>exml-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
          <configuration>
            <validationMode>error</validationMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>jangaroo-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
        </plugin>
        <plugin>
          <groupId>net.jangaroo</groupId>
          <artifactId>webjars-maven-plugin</artifactId>
          <version>${jangaroo.version}</version>
        </plugin>
      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>create-buildnumber-of-git-revision</id>
            <phase>initialize</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>analyze-duplicate</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>${failOnWarning}</failOnWarning>
              <ignoreNonCompile>true</ignoreNonCompile>
              <outputXML>true</outputXML>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.coremedia.maven</groupId>
            <artifactId>coremedia-enforcer-rules</artifactId>
            <version>1.1.1</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>enforce-onerepo-rules</id>
            <configuration>
              <rules>
                <myCustomRule implementation="com.coremedia.maven.enforcer.OneRepoEnforcerRule"/>
              </rules>
              <fail>${coremedia.enforcer.fail}</fail>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>enforce-versions</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[1.7,)</version>
                </requireJavaVersion>
                <DependencyConvergence/>
                <bannedDependencies>
                  <excludes>
                    <!-- excluded because of conflict with logback -->
                    <exclude>commons-logging:commons-logging</exclude>
                    <!-- excluded because already included in jdk 6 -->
                    <exclude>stax:stax-api</exclude>
                    <exclude>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</exclude>
                    <exclude>org.mockito:mockito-all</exclude>
                    <!-- excluded servlet, jsp, and el APIs because the new artifactIds changed,
                                             and we do not want to include both old and new versions -->
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>javax.servlet.jsp:jsp-api</exclude>
                    <exclude>javax.servlet.jsp.jstl:jstl-api</exclude>
                    <exclude>javax.el:el-api</exclude>
                    <!-- exclude, and include only with scope "provided" -->
                    <exclude>javax.servlet:javax.servlet-api</exclude>
                    <!-- junit:junit vs. junit:junit-dep: Since JUnit 4.11 junit-dep just relocates to
                         junit and files a warning when used. Thus excluding it here. -->
                    <exclude>junit:junit-dep</exclude>
                    <exclude>xalan:xalan</exclude>
                    <exclude>xerces:xercesImpl</exclude>
                    <exclude>xml-apis:xml-apis</exclude>
                    <exclude>rhino:js</exclude>
                    <!-- uses GPL -->
                    <exclude>net.joala:*</exclude>
                  </excludes>
                  <includes>
                    <!--
                      Do not even allow scope "test", since it overrides a transitive "provided".
                      S. http://www.sonatype.com/books/mvnref-book/reference/pom-relationships-sect-project-dependencies.html#pom-relationships-sect-transitive
                    -->
                    <include>javax.servlet:javax.servlet-api:*:*:provided</include>
                  </includes>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coremedia.maven</groupId>
        <artifactId>coremedia-application-maven-plugin</artifactId>
        <extensions>true</extensions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
  </reporting>

  <repositories>
    <repository>
      <id>coremedia.external.livecontext.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/repositories/livecontext-releases/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>coremedia.external.livecontext.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/repositories/livecontext-releases/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>coremedia.external.releases</id>
      <name>CoreMedia CMS</name>
      <url>https://repository.coremedia.com/nexus/content/groups/cms/</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

</project>