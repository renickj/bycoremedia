<?xml version="1.0" encoding="UTF-8" ?>
<CMJavaScript folder="/Themes/perfectchef/js" name="com.coremedia.blueprint.perfectchef.deviceSettings.js" xmlns:cmexport="http://www.coremedia.com/2012/cmexport">
<locale></locale>
<master>
</master>
<description></description>
<code grammarName="coremedia-richtext-1.0"><div xmlns="http://www.coremedia.com/2003/richtext-1.0" xmlns:xlink="http://www.w3.org/1999/xlink"><p>/**</p><p> *  CoreMedia Namespace</p><p> */</p><p>var coremedia = (function (module) {</p><p>  return module;</p><p>}(coremedia || {}));</p><p>coremedia.blueprint = (function (module) {</p><p>  return module;</p><p>}(coremedia.blueprint || {}));</p><p>coremedia.blueprint.perfectchef = (function (module) {</p><p>  return module;</p><p>}(coremedia.blueprint.perfectchef || {}));</p><p>/**</p><p> *</p><p> */</p><p>coremedia.blueprint.perfectchef.deviceSettings = function (module) {</p><p>  var $ = coremedia.blueprint.$;</p><p>  var $document = $(document);</p><p>  var applyDropdown = function ($target) {</p><p>    $target.findAndSelf(".cm-placement-header .cm-navigation.cm-dropdown &gt; li &gt; .cm-dropdown-button--open").removeClass("icon-menu-next");</p><p>    $target.findAndSelf(".cm-placement-header .cm-navigation.cm-dropdown &gt; li &gt; .cm-dropdown-button--close").removeClass("icon-menu-back");</p><p>    $target.findAndSelf(".cm-placement-header .cm-navigation.cm-dropdown &gt; li &gt; .cm-dropdown-button").addClass("icon-menu");</p><p>  };</p><p>  var removeDropdown = function ($target) {</p><p>    $target.findAndSelf(".cm-placement-header .cm-navigation.cm-dropdown &gt; li &gt; .cm-dropdown-button").removeClass("icon-menu");</p><p>    $target.findAndSelf(".cm-placement-header .cm-navigation.cm-dropdown &gt; li &gt; .cm-dropdown-button--open").addClass("icon-menu-next");</p><p>    $target.findAndSelf(".cm-placement-header .cm-navigation.cm-dropdown &gt; li &gt; .cm-dropdown-button--close").addClass("icon-menu-back");</p><p>  };</p><p>  var applyDisableImageMapDefaultTarget = function ($target) {</p><p>    $target.findAndSelf(".cm-imagemap").each(function () {</p><p>      var $imagemap = $(this);</p><p>      var $imagemapLink = $imagemap.find(".cm-imagemap__link");</p><p>      var $imagemapAreas = $imagemap.find(".cm-imagemap__areas");</p><p>      if ($imagemapAreas.find(".cm-imagemap__area").size() &gt; 0) {</p><p>        $imagemapLink.data("href", $imagemapLink.attr("href"));</p><p>        $imagemapLink.removeAttr("href");</p><p>      }</p><p>    });</p><p>  };</p><p>  var removeDisableImageMapDefaultTarget = function ($target) {</p><p>    $target.findAndSelf(".cm-imagemap").each(function () {</p><p>      var $imagemap = $(this);</p><p>      var $imagemapLink = $imagemap.find(".cm-imagemap__link");</p><p>      var $imagemapAreas = $imagemap.find(".cm-imagemap__areas");</p><p>      if ($imagemapAreas.find(".cm-imagemap__area").size() &gt; 0) {</p><p>        $imagemapLink.attr("href", $imagemapLink.data("href"));</p><p>        $imagemapLink.removeData("href");</p><p>      }</p><p>    });</p><p>  };</p><p>  var applyDisablePopupCart = function ($target) {</p><p>    $target.findAndSelf(".cm-icon--cart[data-cm-popup-control]").each(function () {</p><p>      var $popup = $(this);</p><p>      var identifier = "cm-popup-control";</p><p>      $popup.data(identifier, $.extend({}, $popup.data(identifier), {disabled: true}));</p><p>    });</p><p>  };</p><p>  var removeDisablePopupCart = function ($target) {</p><p>    $target.findAndSelf(".cm-icon--cart[data-cm-popup-control]").each(function () {</p><p>      var $popup = $(this);</p><p>      var identifier = "cm-popup-control";</p><p>      $popup.data(identifier, $.extend({}, $popup.data(identifier), {disabled: false}));</p><p>    });</p><p>  };</p><p>  var applyDisableImageMap = function ($target) {</p><p>    $target.findAndSelf(".cm-imagemap").each(function () {</p><p>      var $imagemap = $(this);</p><p>      var $imagemapImage = $imagemap.find(".cm-imagemap__image");</p><p>      $imagemapImage.attr("useMap", "");</p><p>    });</p><p>  };</p><p>  var removeDisableImageMap = function ($target) {</p><p>    $target.findAndSelf(".cm-imagemap").each(function () {</p><p>      var $imagemap = $(this);</p><p>      var $imagemapImage = $imagemap.find(".cm-imagemap__image");</p><p>      var $imagemapAreas = $imagemap.find(".cm-imagemap__areas");</p><p>      $imagemapImage.attr("useMap", "#" + $imagemapAreas.attr("name"));</p><p>    });</p><p>  };</p><p>  var DYNAMIC_SLIDESHOW_IDENTIFIER = "cm-dynamic-slideshow";</p><p>  var DYNAMIC_SLIDESHOW_ELEMENTS_SELECTOR = ".cm-teaser";</p><p>  var applyDynamicSlideshow = function ($target) {</p><p>    $target.findAndSelf("#cm-page #cm-placement-sidebar, #cm-page .cm-box--related").each(function () {</p><p>      var $sidebar = $(this);</p><p>      var $dynamicSlideshow = $("&lt;div&gt;&lt;/div&gt;").addClass("cm-collection").addClass("cm-collection--slideshow");</p><p>      $sidebar.find(DYNAMIC_SLIDESHOW_ELEMENTS_SELECTOR).each(function () {</p><p>        var $teaser = $(this);</p><p>        // teaser may not be inside cycle-sentinel</p><p>        if ($teaser.parents(".cycle-sentinel").length == 0) {</p><p>          $teaser.clone().appendTo($dynamicSlideshow);</p><p>        }</p><p>      });</p><p>      var $arrow = $("&lt;div&gt;&lt;/div&gt;");</p><p>      $arrow.addClass("cm-direction-arrow");</p><p>      var $arrowLeft = $arrow.clone();</p><p>      $arrowLeft.addClass("cm-direction-arrow--left").addClass("cm-collection--slideshow__prev");</p><p>      var $arrowRight = $arrow.clone();</p><p>      $arrowRight.addClass("cm-direction-arrow--right").addClass("cm-collection--slideshow__next");</p><p>      $dynamicSlideshow.append($arrowLeft).append($arrowRight);</p><p>      $sidebar.hide();</p><p>      // sidebar needs to be replaced while related content can be inserted after all</p><p>      var $added;</p><p>      if ($sidebar.is("#cm-placement-sidebar")) {</p><p>        $added = $("&lt;div&gt;&lt;/div&gt;").attr("class", $sidebar.attr("class"));</p><p>        $added.append($dynamicSlideshow);</p><p>      } else {</p><p>        $added = $dynamicSlideshow;</p><p>      }</p><p>      $added.insertAfter($sidebar);</p><p>      $sidebar.data(DYNAMIC_SLIDESHOW_IDENTIFIER, $added);</p><p>      $dynamicSlideshow.cycle({</p><p>        log: false,</p><p>        slides: "&gt; " + DYNAMIC_SLIDESHOW_ELEMENTS_SELECTOR,</p><p>        timeout: 1000,</p><p>        // 600 for mobile, 1000 for desktop</p><p>        speed: (coremedia.blueprint.deviceDetector.getLastDevice().type == coremedia.blueprint.perfectchef.DEVICE_DESKTOP) ? 1000 : 600,</p><p>        pauseOnHover: true,</p><p>        fx: "scrollHorz",</p><p>        swipe: true,</p><p>        prev: "&gt; .cm-collection--slideshow__prev",</p><p>        next: "&gt; .cm-collection--slideshow__next"</p><p>      });</p><p>      $document.trigger(coremedia.blueprint.basic.EVENT_NODE_APPENDED, [$added]);</p><p>    });</p><p>  };</p><p>  var removeDynamicSlideshow = function ($target) {</p><p>    $target.findAndSelf("#cm-page #cm-placement-sidebar, #cm-page .cm-box--related").each(function () {</p><p>      var $sidebar = $(this);</p><p>      var $added = $sidebar.data(DYNAMIC_SLIDESHOW_IDENTIFIER);</p><p>      var $dynamicSlideshow;</p><p>      if ($sidebar.is("#cm-placement-sidebar")) {</p><p>        $dynamicSlideshow = $added.find(".cm-collection");</p><p>      } else {</p><p>        $dynamicSlideshow = $added;</p><p>      }</p><p>      if ($dynamicSlideshow !== undefined) {</p><p>        $dynamicSlideshow.cycle("destroy");</p><p>      }</p><p>      if ($added !== undefined) {</p><p>        $added.remove();</p><p>      }</p><p>      $sidebar.show();</p><p>      $document.trigger(coremedia.blueprint.basic.EVENT_LAYOUT_CHANGED);</p><p>    });</p><p>  };</p><p>  var devices = {</p><p>    "mobile": {</p><p>      applySettings: function ($target) {</p><p>        applyDropdown($target);</p><p>        applyDisableImageMap($target);</p><p>        applyDisablePopupCart($target);</p><p>        applyDynamicSlideshow($target);</p><p>      },</p><p>      removeSettings: function ($target) {</p><p>        removeDynamicSlideshow($target);</p><p>        removeDisablePopupCart($target);</p><p>        removeDisableImageMap($target);</p><p>        removeDropdown($target);</p><p>      },</p><p>      "portrait": {</p><p>        applySettings: function ($target) {</p><p>        },</p><p>        removeSettings: function ($target) {</p><p>        }</p><p>      },</p><p>      "landscape": {</p><p>        applySettings: function ($target) {</p><p>        },</p><p>        removeSettings: function ($target) {</p><p>        }</p><p>      }</p><p>    },</p><p>    "tablet": {</p><p>      applySettings: function ($target) {</p><p>        // footer navigation does not act as dropdown menu</p><p>        $target.findAndSelf(".cm-navigation--footer").removeClass("cm-dropdown");</p><p>        applyDropdown($target);</p><p>        applyDisableImageMapDefaultTarget($target);</p><p>        applyDynamicSlideshow($target);</p><p>        // change height of marketing spot items</p><p>        coremedia.blueprint.perfectchef.setMarketingSpotItemsHeight();</p><p>      },</p><p>      removeSettings: function ($target) {</p><p>        // remove height of marketing spot items</p><p>        coremedia.blueprint.perfectchef.unsetMarketingSpotItemsHeight();</p><p>        removeDynamicSlideshow($target);</p><p>        removeDisableImageMapDefaultTarget($target);</p><p>        removeDropdown($target);</p><p>        $target.findAndSelf(".cm-navigation--footer").addClass("cm-dropdown");</p><p>      },</p><p>      "portrait": {</p><p>        applySettings: function ($target) {</p><p>        },</p><p>        removeSettings: function ($target) {</p><p>        }</p><p>      },</p><p>      "landscape": {</p><p>        applySettings: function ($target) {</p><p>        },</p><p>        removeSettings: function ($target) {</p><p>        }</p><p>      }</p><p>    },</p><p>    "desktop": {</p><p>      applySettings: function ($target) {</p><p>        // show info text for certain icons</p><p>        $target.findAndSelf(".cm-icon--user-details .cm-icon__info").removeClass("cm-visuallyhidden");</p><p>        $target.findAndSelf(".cm-icon--login .cm-icon__info").removeClass("cm-visuallyhidden");</p><p>        $target.findAndSelf(".cm-icon--button-top .cm-icon__info").removeClass("cm-visuallyhidden");</p><p>        // all dropdown functionality is removed from navigations</p><p>        $target.findAndSelf(".cm-navigation").removeClass("cm-dropdown");</p><p>        // find header icon for main navigation</p><p>        var $headerNavigationIcon = $target.findAndSelf(".cm-placement-header .cm-icon--navigation");</p><p>        // header navigation is placed below the navigation icon</p><p>        var $headerNavigation = $headerNavigationIcon.find(".cm-navigation");</p><p>        // it no longer acts as icon...</p><p>        $headerNavigationIcon.removeClass("cm-icon");</p><p>        $headerNavigation.removeClass("cm-icon__symbol");</p><p>        // ...and navigation will be transformed into mega-menu</p><p>        $headerNavigation.addClass("mega-menu");</p><p>        // change width of mega-menu items</p><p>        coremedia.blueprint.perfectchef.setMegaMenuItemsWidth();</p><p>        // change height of marketing spot items</p><p>        coremedia.blueprint.perfectchef.setMarketingSpotItemsHeight();</p><p>        // find header icon for search</p><p>        var $headerSearchIcon = $target.findAndSelf(".cm-placement-header .cm-icon--search");</p><p>        // search form is placed below the search icon</p><p>        var $headerSearchForm = $headerSearchIcon.find(".cm-search-form");</p><p>        // it no longer acts as icon...</p><p>        $headerSearchIcon.removeClass("cm-icon");</p><p>        // submit button in search form has a different icon for desktop</p><p>        $headerSearchForm.find(".cm-search-form__button &gt; i").removeClass("icon-arrow-right").addClass("icon-search");</p><p>        // attach form to search icon without being wrapped into popup</p><p>        $headerSearchForm.appendTo(".cm-search");</p><p>        applyDisableImageMapDefaultTarget($target);</p><p>      },</p><p>      removeSettings: function ($target) {</p><p>        removeDisableImageMapDefaultTarget($target);</p><p>        // find header icon for search</p><p>        var $headerSearchIcon = $target.findAndSelf(".cm-placement-header .cm-icon--search");</p><p>        // search form is placed below the search icon</p><p>        var $headerSearchForm = $headerSearchIcon.find(".cm-search-form");</p><p>        $headerSearchForm.appendTo(".cm-popup--search");</p><p>        $headerSearchForm.find(".cm-search-form__button &gt; i").removeClass("icon-search").addClass("icon-arrow-right");</p><p>        $headerSearchIcon.addClass("cm-icon");</p><p>        // remove height of marketing spot items</p><p>        coremedia.blueprint.perfectchef.unsetMarketingSpotItemsHeight();</p><p>        // remove width of mega-menu items</p><p>        coremedia.blueprint.perfectchef.unsetMegaMenuItemsWidth();</p><p>        // find header icon for main navigation</p><p>        var $headerNavigationIcon = $target.findAndSelf(".cm-placement-header .cm-icon--navigation");</p><p>        // header navigation is placed below the navigation icon</p><p>        var $headerNavigation = $headerNavigationIcon.find(".cm-navigation");</p><p>        $headerNavigation.removeClass("mega-menu");</p><p>        $headerNavigation.addClass("cm-icon__symbol");</p><p>        $headerNavigationIcon.addClass("cm-icon");</p><p>        $target.findAndSelf(".cm-navigation").addClass("cm-dropdown");</p><p>        $target.findAndSelf(".cm-icon--button-top .cm-icon__info").addClass("cm-visuallyhidden");</p><p>        $target.findAndSelf(".cm-icon--login .cm-icon__info").addClass("cm-visuallyhidden");</p><p>        $target.findAndSelf(".cm-icon--user-details .cm-icon__info").addClass("cm-visuallyhidden");</p><p>      },</p><p>      "portrait": {</p><p>        applySettings: function ($target) {</p><p>        },</p><p>        removeSettings: function ($target) {</p><p>        }</p><p>      },</p><p>      "landscape": {</p><p>        applySettings: function ($target) {</p><p>        },</p><p>        removeSettings: function ($target) {</p><p>        }</p><p>      }</p><p>    }</p><p>  };</p><p>  /**</p><p>   *</p><p>   * @param device</p><p>   * @param orientation</p><p>   * @param $target</p><p>   */</p><p>  module.removeSettings = function (device, orientation, $target) {</p><p>    if (devices[device] !== undefined) {</p><p>      if (devices[device][orientation] !== undefined) {</p><p>        devices[device][orientation].removeSettings($target);</p><p>      } else {</p><p>        devices[device].removeSettings($target);</p><p>      }</p><p>    }</p><p>  };</p><p>  /**</p><p>   *</p><p>   * @param device</p><p>   * @param orientation</p><p>   * @param $target</p><p>   */</p><p>  module.applySettings = function (device, orientation, $target) {</p><p>    if (devices[device] !== undefined) {</p><p>      if (devices[device][orientation] !== undefined) {</p><p>        devices[device][orientation].applySettings($target);</p><p>      } else {</p><p>        devices[device].applySettings($target);</p><p>      }</p><p>    }</p><p>  };</p><p>  return module;</p><p>}(coremedia.blueprint.perfectchef.deviceSettings || {});</p><p>coremedia.blueprint.$(function () {</p><p>  var $ = coremedia.blueprint.$;</p><p>  var $document = $(document);</p><p>  // update images and masonry on device change</p><p>  $document.on(coremedia.blueprint.deviceDetector.EVENT_DEVICE_CHANGED, function (event, newDevice, oldDevice) {</p><p>    coremedia.blueprint.perfectchef.deviceSettings.removeSettings(oldDevice.type, oldDevice.orientation, $document);</p><p>    if (oldDevice.type !== newDevice.type) {</p><p>      coremedia.blueprint.perfectchef.deviceSettings.removeSettings(oldDevice.type, undefined, $document);</p><p>      coremedia.blueprint.perfectchef.deviceSettings.applySettings(newDevice.type, undefined, $document);</p><p>    }</p><p>    coremedia.blueprint.perfectchef.deviceSettings.applySettings(newDevice.type, newDevice.orientation, $document);</p><p>    $document.trigger(coremedia.blueprint.basic.EVENT_LAYOUT_CHANGED);</p><p>  });</p><p>  // device settings need to be reapplied if DOM changes</p><p>  $document.on(coremedia.blueprint.basic.EVENT_NODE_APPENDED, function (event, $node) {</p><p>    var device = coremedia.blueprint.deviceDetector.getLastDevice();</p><p>    coremedia.blueprint.perfectchef.deviceSettings.applySettings(device.type, device.orientation, $node);</p><p>  });</p><p>});</p></div></code>
<ieExpression></ieExpression>
<include>
</include>
<dataUrl></dataUrl>
</CMJavaScript>
